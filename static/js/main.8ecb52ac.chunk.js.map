{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactListItem/ContactListItem.module.css","components/ContactList/ContactList.module.css","redux/actions.js","redux/operations.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactListItem/ContactListItem.js","components/ContactList/ContactList.js","App.js","redux/reducer.js","redux/store.js","index.js"],"names":["module","exports","fetchContactsRequest","createAction","fetchContactsSuccess","fetchContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","axios","defaults","baseURL","dispatch","get","then","data","catch","error","name","number","contact","post","id","delete","ContactForm","state","handleInputChange","e","currentTarget","value","setState","handleAddContact","preventDefault","props","onSubmit","reset","alert","this","className","styles","form","type","placeholder","onChange","pattern","title","button","Component","connect","operations","filter","actions","target","ContactListItem","handleDeleteContact","item","btn","onClick","getFilteredContacts","allContacts","normalizedFilter","toLowerCase","includes","contacts","items","filteredContacts","list","map","filteredContact","App","fetchContacts","createReducer","_","payload","find","newContact","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8ecb52ac.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1bQLe\",\"button\":\"ContactForm_button__3-POw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"ContactListItem_btn__1lV-B\",\"item\":\"ContactListItem_item__3-9Dy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__2s8Xv\"};","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const fetchContactsRequest = createAction('contacts/fetchContactsRequest');\r\nexport const fetchContactsSuccess = createAction('contacts/fetchContactsSuccess');\r\nexport const fetchContactsError = createAction('contacts/fetchContactsError');\r\n\r\nexport const addContactRequest = createAction('contacts/addContactRequest');\r\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\r\nexport const addContactError = createAction('contacts/addContactError');\r\n\r\nexport const deleteContactRequest = createAction('contacts/deleteContactRequest');\r\nexport const deleteContactSuccess = createAction('contacts/deleteContactSuccess');\r\nexport const deleteContactError = createAction('contacts/deleteContactError');\r\n\r\nexport const changeFilter = createAction('contacts/changeFilter');","import axios from 'axios';\r\nimport {\r\n    fetchContactsRequest,\r\n    fetchContactsSuccess,\r\n    fetchContactsError,\r\n    addContactRequest,\r\n    addContactSuccess,\r\n    addContactError,\r\n    deleteContactRequest,\r\n    deleteContactSuccess,\r\n    deleteContactError,\r\n} from './actions';\r\n\r\naxios.defaults.baseURL = 'http://localhost:3000';\r\n\r\nconst fetchContacts = () => dispatch => {\r\n    dispatch(fetchContactsRequest());\r\n\r\n    axios\r\n        .get('/contacts')\r\n        .then(({ data }) => dispatch(fetchContactsSuccess(data)))\r\n        .catch(error => dispatch(fetchContactsError(error)));\r\n};\r\n\r\nconst addContact = ({ name, number }) => dispatch => {\r\n    const contact = { name, number };\r\n\r\n    dispatch(addContactRequest());\r\n\r\n    axios\r\n        .post('/contacts', contact)\r\n        .then(({ data }) => dispatch(addContactSuccess(data)))\r\n        .catch(error => dispatch(addContactError(error)));\r\n};\r\n\r\nconst deleteContact = id => dispatch => {\r\n    dispatch(deleteContactRequest());\r\n\r\n    axios\r\n        .delete(`/contacts/${id}`)\r\n        .then(() => dispatch(deleteContactSuccess(id)))\r\n        .catch(error => dispatch(deleteContactError(error)));\r\n};\r\n\r\nexport default { fetchContacts, addContact, deleteContact };","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport operations from '../../redux/operations';\r\nimport styles from './ContactForm.module.css';\r\n\r\nclass ContactForm extends Component {\r\n    state = {\r\n        name: '',\r\n        number: ''\r\n    }\r\n    \r\n    handleInputChange = (e) => {\r\n        const { name, value } = e.currentTarget;\r\n        this.setState({ [name]: value });\r\n    };\r\n\r\n    handleAddContact = (e) => {\r\n        e.preventDefault();\r\n        if (this.state.name === '' || this.state.number === '') {\r\n            alert('Please enter data');\r\n            return;\r\n        }\r\n        this.props.onSubmit({ ...this.state });\r\n        this.reset();\r\n    };\r\n\r\n    reset = () => {\r\n        this.setState({ name: '', number: '' })\r\n    };\r\n\r\n    render() {\r\n        const { name, number } = this.state;\r\n        return (\r\n            <form onSubmit={this.handleAddContact} className={styles.form}>\r\n                <label>\r\n                    <p>Name</p>\r\n                    <input\r\n                        name='name'\r\n                        value={name}\r\n                        type='text'\r\n                        placeholder='Name'\r\n                        onChange={this.handleInputChange}\r\n                        pattern='[a-zA-Z \\u0400-\\u04ff]{3,30}'\r\n                    />\r\n                </label>\r\n                <label>\r\n                    <p>Number</p>\r\n                    <input\r\n                        name='number'\r\n                        value={number}\r\n                        type='tel'\r\n                        placeholder='Number'\r\n                        onChange={this.handleInputChange}\r\n                        pattern='\\d{3}[\\s.-]?\\d{2}[\\s.-]?\\d{2}$'\r\n                        title='Please, use the following format: 111-11-11'\r\n                    />\r\n                </label>\r\n                <button type='submit' className={styles.button}>Add contact</button>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    onSubmit: ( name, number ) => dispatch(operations.addContact(name, number)),\r\n})\r\nexport default connect(null, mapDispatchToProps)(ContactForm);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../../redux/actions';\r\n\r\nconst Filter = ({ value, onChange }) => (\r\n    <label>\r\n        Find contacts by name\r\n         <br />\r\n        <input type='text' value={value} onChange={onChange} placeholder='Search contacts' />\r\n    </label>);\r\n\r\nFilter.propTypes = {\r\n    value: PropTypes.string,\r\n    onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({ value: state.filter });\r\n\r\nconst mapDispatchToProps = dispatch => ({ onChange: (e) => dispatch(actions.changeFilter(e.target.value)) });\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport styles from './ContactListItem.module.css';\r\n\r\nconst ContactListItem = ({ id, name, number, handleDeleteContact }) => (\r\n  <li key={id} className={styles.item}>\r\n    <span>\r\n      {name}: {number}\r\n    </span>\r\n    <button className={styles.btn} onClick={() => handleDeleteContact(id)}>Delete</button>\r\n  </li>);\r\n\r\nContactListItem.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  handleDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactListItem;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport operations from '../../redux/operations';\r\nimport styles from './ContactList.module.css';\r\nimport ContactListItem from '../ContactListItem';\r\n\r\nconst ContactList = ({filteredContacts, handleDeleteContact}) => (\r\n    <ul className={styles.list}>\r\n        {\r\n            filteredContacts.map(filteredContact => (\r\n                <ContactListItem\r\n                    key={filteredContact.id}\r\n                    id={filteredContact.id}\r\n                    name={filteredContact.name}\r\n                    number={filteredContact.number}\r\n                    handleDeleteContact={handleDeleteContact}\r\n                />))\r\n        }\r\n    </ul>);\r\n\r\nContactList.propTypes = {\r\n    filteredContacts: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            id: PropTypes.string,\r\n            name: PropTypes.string,\r\n            number: PropTypes.string\r\n        })\r\n    ).isRequired,\r\n    handleDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nconst getFilteredContacts = (allContacts, filter) => {\r\n  const normalizedFilter = filter.toLowerCase();\r\n\r\n  return allContacts.filter(contact =>\r\n    contact.name.toLowerCase().includes(normalizedFilter),\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ contacts: { items, filter } }) => ({\r\n  filteredContacts: getFilteredContacts(items, filter),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    handleDeleteContact: (id) => dispatch(operations.deleteContact(id)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);","import { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport ContactForm from './components/ContactForm';\r\nimport Filter from './components/Filter';\r\nimport ContactList from './components/ContactList';\r\nimport operations from './redux/operations';\r\n\r\nclass App extends Component {\r\n  componentDidMount() {\r\n    this.props.fetchContacts();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <h1>Phonebook</h1>\r\n        <ContactForm />\r\n        <h2>Contacts</h2>\r\n        <Filter />\r\n        <ContactList />\r\n      </>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  fetchContacts: () => dispatch(operations.fetchContacts()),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(App);","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport {\r\n    fetchContactsSuccess,\r\n    addContactSuccess,\r\n    deleteContactSuccess,\r\n    changeFilter\r\n} from './actions';\r\n\r\nconst items = createReducer([], {\r\n    [fetchContactsSuccess]: (_, { payload }) => payload,\r\n    [addContactSuccess]: (state, { payload }) => {\r\n        const isInList = state.find(\r\n                newContact => newContact.name.toLowerCase() === payload.name.toLowerCase()\r\n            );\r\n            if (isInList) {\r\n                alert(`Contact ${payload.name} is already exist`);\r\n                return state;\r\n            }\r\n            return [...state, payload];\r\n    },\r\n    [deleteContactSuccess]: (state, { payload }) => state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst filter = createReducer('', { [changeFilter]: (_, { payload }) => payload });\r\n\r\nexport default combineReducers({\r\n    items,\r\n    filter,\r\n});","import { configureStore, getDefaultMiddleware, } from '@reduxjs/toolkit';\r\nimport logger from 'redux-logger';\r\nimport {\r\n    FLUSH,\r\n    REHYDRATE,\r\n    PAUSE,\r\n    PERSIST,\r\n    PURGE,\r\n    REGISTER,\r\n} from 'redux-persist';\r\nimport reducer from './reducer';\r\n\r\nconst middleware = [...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }), logger];\r\n\r\nconst store = configureStore({\r\n    reducer: {\r\n    contacts: reducer,\r\n},\r\n    middleware,\r\n    devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\n// import { PersistGate } from 'redux-persist/integration/react'\r\nimport App from './App';\r\nimport store from './redux/store';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      {/* <PersistGate loading={null} persistor={store.persistor}> */}\r\n        <BrowserRouter>\r\n          <App />\r\n        </BrowserRouter>        \r\n      {/* </PersistGate>       */}\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}